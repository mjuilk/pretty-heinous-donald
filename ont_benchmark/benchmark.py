import pandas as pdimport matplotlib.pyplot as pltimport numpy as npimport seaborn as snsdf = pd.DataFrame(    {     'analysis' : ['nano_ih', 'nano_ih', 'sen_ih', 'sen_ih'],     'type' : ['SNP', 'INDEL', 'SNP', 'INDEL'],     'TP' : [4152996, 621919, 3825982, 632510],     'FP' : [574956, 483709, 398866, 308401],     'FN' : [913464, 336403, 1240478, 325812],     'Recall' : [0.82, 0.649, 0.755, 0.66],     'Precision' : [0.878, 0.563, 0.906, 0.672]     })# Create subplotsfig, axes = plt.subplots(figsize=(9, 5), nrows=1, ncols=2)# Recall barplotrecall_plot = sns.barplot(data=df, x="type", y="Recall", hue="analysis", palette="dark", alpha=0.6, ax=axes[0])for p in recall_plot.patches:    if p.get_height() > 0:  # Avoid labeling bars with height 0        recall_plot.annotate(f'{p.get_height():.3f}',                              (p.get_x() + p.get_width() / 2., p.get_height()),                              ha='center', va='bottom', fontsize=10, color='black')# Precision barplotprecision_plot = sns.barplot(data=df, x="type", y="Precision", hue="analysis", palette="dark", alpha=0.6, ax=axes[1])for p in precision_plot.patches:    if p.get_height() > 0:  # Avoid labeling bars with height 0        precision_plot.annotate(f'{p.get_height():.3f}',                                 (p.get_x() + p.get_width() / 2., p.get_height()),                                 ha='center', va='bottom', fontsize=10, color='black')# Remove spinessns.despine(left=False, ax=axes[0])sns.despine(left=False, ax=axes[1])# Remove x-axis labelsaxes[0].set_xlabel("")axes[1].set_xlabel("")plt.tight_layout()plt.suptitle("Long-read and short-read quality statistics in reference to ONT GIAB 2025 data", y=-0.01)plt.show()#####CONFUSION MATRICES######cf_nanosnp = [[df['TP'][0], df['FP'][0]],             [df['FN'][0], 0]]cf_nanoind = [[df['TP'][1], df['FP'][1]],             [df['FN'][1], 0]]cf_sensnp = [[df['TP'][2], df['FP'][2]],             [df['FN'][2], 0]]cf_senind = [[df['TP'][3], df['FP'][3]],             [df['FN'][3], 0]]fig, axes = plt.subplots(figsize = (7, 5), nrows = 2, ncols = 2)sns.heatmap(cf_nanosnp/np.sum(cf_nanosnp), annot=True,            cmap=sns.cubehelix_palette(as_cmap=True),            ax=axes[0][0])axes[0][0].set_title('Long-Read SNP')sns.heatmap(cf_nanoind/np.sum(cf_nanoind), annot=True,            cmap=sns.cubehelix_palette(as_cmap=True),            ax=axes[0][1])axes[0][1].set_title('Long-Read INDEL')sns.heatmap(cf_sensnp/np.sum(cf_sensnp), annot=True,            cmap=sns.cubehelix_palette(as_cmap=True),            ax=axes[1][0])axes[1][0].set_title('Short-Read SNP')sns.heatmap(cf_senind/np.sum(cf_senind), annot=True,            cmap=sns.cubehelix_palette(as_cmap=True),            ax=axes[1][1])axes[1][1].set_title('Short-Read INDEL')for row in axes:    for col in row:        col.set(xticklabels=[])        col.set(yticklabels=[])plt.show()